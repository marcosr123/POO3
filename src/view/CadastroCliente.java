/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import ModeloBeans.BeansCliente;
import ModeloConection.ConexaoBD;
import ModeloDAO.DAOCliente;
import ModeloDAO.ValidaCPF;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author samsung
 */
public class CadastroCliente extends javax.swing.JFrame {
    BeansCliente clie = new BeansCliente();
    DAOCliente control = new DAOCliente();
    ConexaoBD conex = new ConexaoBD();
    int flag = 0;
    /**
     * 
     * Creates new form Cadastro
     */
    public CadastroCliente() {
        initComponents();
        desabilitaCampos();
        Salvar.setEnabled(false);
        Cancelar.setEnabled(false);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jButton1 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pesquisarCliente = new javax.swing.JButton();
        PesquisarCliente = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTablePesquisa = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        painel = new javax.swing.JPanel();
        nomeCliente = new javax.swing.JTextField();
        Cpf = new javax.swing.JFormattedTextField();
        nascimento = new javax.swing.JFormattedTextField();
        sexo = new javax.swing.JComboBox<>();
        Nomeusuario = new javax.swing.JLabel();
        cpfusuario = new javax.swing.JLabel();
        nascimentousuario = new javax.swing.JLabel();
        sexousuario = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        emailusuario = new javax.swing.JLabel();
        Funcao = new javax.swing.JLabel();
        funcao = new javax.swing.JComboBox<>();
        Lcodigo = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        telefone = new javax.swing.JFormattedTextField();
        celular = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        celularusuario = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Novo = new javax.swing.JButton();
        Salvar = new javax.swing.JButton();
        Editar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Sair = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jScrollPane3.setViewportView(jTree1);

        jButton1.setText("jButton1");

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu6.setText("Edit");
        jMenuBar2.add(jMenu6);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro");

        jPanel1.setLayout(null);

        jLabel2.setText("Nome:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(230, 50, 40, 20);

        pesquisarCliente.setText("Pesquisar");
        pesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarClienteActionPerformed(evt);
            }
        });
        jPanel1.add(pesquisarCliente);
        pesquisarCliente.setBounds(520, 50, 150, 30);
        jPanel1.add(PesquisarCliente);
        PesquisarCliente.setBounds(280, 50, 220, 30);

        jTablePesquisa.setModel(tmCliente);
        jTablePesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePesquisaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTablePesquisa);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(20, 90, 830, 150);

        jLabel1.setText("CADASTRO DE CLIENTES");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(364, 15, 520, 14);

        painel.setBorder(javax.swing.BorderFactory.createTitledBorder("DADOS PESSOAIS"));

        try {
            Cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            nascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        sexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Masculino", "Feminino" }));

        Nomeusuario.setText("NOME:");

        cpfusuario.setText("CPF:");

        nascimentousuario.setText("DATA DE NASCIMENTO:");

        sexousuario.setText("SEXO:");

        emailusuario.setText("EMAIL:");

        Funcao.setText("Função:");

        funcao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cliente" }));

        Lcodigo.setText("CODIGO:");

        codigo.setEnabled(false);

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Email)
                        .addComponent(nomeCliente)
                        .addComponent(Cpf, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                        .addComponent(cpfusuario))
                    .addComponent(emailusuario)
                    .addComponent(Lcodigo)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nomeusuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nascimentousuario)
                    .addComponent(nascimento)
                    .addComponent(sexousuario)
                    .addComponent(sexo, 0, 255, Short.MAX_VALUE)
                    .addComponent(Funcao)
                    .addComponent(funcao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53))
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelLayout.createSequentialGroup()
                        .addComponent(Lcodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Nomeusuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cpfusuario)
                        .addGap(8, 8, 8)
                        .addComponent(Cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailusuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelLayout.createSequentialGroup()
                        .addComponent(nascimentousuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sexousuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Funcao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(funcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jPanel1.add(painel);
        painel.setBounds(20, 250, 760, 280);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("CONTATO"));

        try {
            telefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #### - ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            celular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ##### - ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel8.setText("TELEFONE:");

        celularusuario.setText("CELULAR:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(celularusuario)
                    .addComponent(jLabel8)
                    .addComponent(celular, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(telefone))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(celularusuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(celular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(20, 530, 370, 181);

        jLabel12.setText("BIBLIOTECA DIGITAL");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(350, 820, 102, 14);

        jPanel2.setLayout(null);
        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 44, 0, 0);

        Novo.setText("Novo");
        Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoActionPerformed(evt);
            }
        });
        jPanel1.add(Novo);
        Novo.setBounds(800, 270, 80, 23);

        Salvar.setText("Salvar");
        Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarActionPerformed(evt);
            }
        });
        jPanel1.add(Salvar);
        Salvar.setBounds(800, 310, 80, 23);

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        jPanel1.add(Editar);
        Editar.setBounds(800, 390, 80, 23);

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(Excluir);
        Excluir.setBounds(800, 430, 80, 23);

        Sair.setText("Sair");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });
        jPanel1.add(Sair);
        Sair.setBounds(800, 470, 80, 23);

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });
        jPanel1.add(Cancelar);
        Cancelar.setBounds(800, 350, 80, 23);

        jScrollPane4.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTablePesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePesquisaMouseClicked
        int linhaSelecionada = jTablePesquisa.getSelectedRow();
        codigo.setText(jTablePesquisa.getValueAt(linhaSelecionada, 0).toString());
        nomeCliente.setText(jTablePesquisa.getValueAt(linhaSelecionada, 1).toString());
        Cpf.setText(jTablePesquisa.getValueAt(linhaSelecionada, 2).toString());
        Email.setText(jTablePesquisa.getValueAt(linhaSelecionada, 6).toString());
        funcao.setSelectedItem(jTablePesquisa.getValueAt(linhaSelecionada, 5).toString());
        telefone.setText(jTablePesquisa.getValueAt(linhaSelecionada, 7).toString());
        celular.setText(jTablePesquisa.getValueAt(linhaSelecionada, 8).toString());
        nascimento.setText(jTablePesquisa.getValueAt(linhaSelecionada, 3).toString());
        sexo.setSelectedItem(jTablePesquisa.getValueAt(linhaSelecionada, 4).toString());
        
        Editar.setEnabled(true);
        Excluir.setEnabled(true);
    }//GEN-LAST:event_jTablePesquisaMouseClicked

    private void NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoActionPerformed
        flag = 1;
        habilitaCampos();
        Salvar.setEnabled(true);
        Cancelar.setEnabled(true);
        // Limpa os dados dos campos
        limpaCampos();
    }//GEN-LAST:event_NovoActionPerformed

    private void SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarActionPerformed
    if(flag==1){    
        if (verificaDados() && verificaCPF()) {
        try {
            clie.setNome(nomeCliente.getText());
            clie.setCpf(Cpf.getText());
            clie.setEmail(Email.getText());
            clie.setFuncao((String) funcao.getSelectedItem());
            clie.setTelefone(telefone.getText());
            clie.setCelular(celular.getText());
            clie.setData(nascimento.getText());
            clie.setSexo((String) sexo.getSelectedItem());
            limpaCampos();
            desabilitaCampos();
            Salvar.setEnabled(false);
            Cancelar.setEnabled(false);
            control.Salvar(clie);
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"ERRO Ao Inserir Dados!\nErro: "+ex);
        }
     }
    }else{
        try {
            alteraRegistro();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao alterar registro.\n"+ex);
        }
    }    
    }//GEN-LAST:event_SalvarActionPerformed

    private void pesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarClienteActionPerformed
        try {
            listaContatos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Problemas ao listar Funcionarios.\n"+ex);
        }
    }//GEN-LAST:event_pesquisarClienteActionPerformed

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        TelaPrincipal tela = new TelaPrincipal();
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_SairActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        try {
            excluirRegistro();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao excluir registro."+ex);
        }
    }//GEN-LAST:event_ExcluirActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        flag = 2;
        habilitaCampos();
        Salvar.setEnabled(true);
        Cancelar.setEnabled(true);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
        Novo.setEnabled(false);
    }//GEN-LAST:event_EditarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        limpaCampos();
        limparTabela();
        Novo.setEnabled(true);
        Salvar.setEnabled(false);
        Cancelar.setEnabled(false);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
    }//GEN-LAST:event_CancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    DefaultTableModel tmCliente = new DefaultTableModel(null, new String[]{"Id", "Nome", "Cpf","Nascimento", "Sexo","Função","Email", "Telefone","Celular", "Loguin", "Senha"});
    List<BeansCliente> clientes;
    
    private void listaContatos() throws SQLException {
        limpaCampos();
        DAOCliente c = new DAOCliente();
        clientes = c.getLista("%" + PesquisarCliente.getText() + "%"); 
        
        // Após pesquisar os contatos, executa o método p/ exibir o resultado na tabela pesquisa
        mostraPesquisa(clientes);
        clientes.clear();
    }
    // Mostra a lista de resultado de acordo com o nome passado no campo pesquisa
    private void mostraPesquisa(List<BeansCliente> cliente) {
        // Limpa a tabela sempre que for solicitado uma nova pesquisa
        limparTabela();
        
        if (cliente.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro encontrado.");
        } else {            
            // Linha em branco usada no for, para cada registro é criada uma nova linha 
            String[] linha = new String[] {null, null, null, null, null, null, null, null, null, null, null};
            // P/ cada registro é criada uma nova linha, cada recebe linha os campos do registro
            for (int i = 0; i < cliente.size(); i++) {
                tmCliente.addRow(linha);
                tmCliente.setValueAt(cliente.get(i).getCodigo(), i, 0);
                tmCliente.setValueAt(cliente.get(i).getNome(), i, 1);
                tmCliente.setValueAt(cliente.get(i).getCpf(), i, 2);
                tmCliente.setValueAt(cliente.get(i).getData(), i, 3);
                tmCliente.setValueAt(cliente.get(i).getSexo(), i, 4);
                tmCliente.setValueAt(cliente.get(i).getFuncao(), i, 5);
                tmCliente.setValueAt(cliente.get(i).getEmail(), i, 6);
                tmCliente.setValueAt(cliente.get(i).getTelefone(), i, 7); 
                tmCliente.setValueAt(cliente.get(i).getCelular(), i, 8);

            }            
        }
    }
    
    private void excluirRegistro() throws SQLException {
        // Se algum registro estiver selecionado
        if (jTablePesquisa.getSelectedRow() != -1) {
            // Exibe uma janela de confirmação antes de exluir o registro
            int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir este registro?",
                    "Confirmação!", JOptionPane.YES_NO_OPTION);

            // Se a confirmação for SIM
            if (resp == JOptionPane.YES_NO_OPTION) {
                // Recebe a linha selecionada
                int linhaSelecionada = jTablePesquisa.getSelectedRow();
                // Recebe o ID da linha selecionada
                int id = (int) jTablePesquisa.getValueAt(linhaSelecionada, 0);
                // Remove o registro, usando como parâmetro, o id da linha selecionada                
                DAOCliente d = new DAOCliente();
                d.remove(id);

                JOptionPane.showMessageDialog(rootPane, "Registro excluido com sucesso.");
                limpaCampos();
                desabilitaCampos();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro não selecionado.");
        }
    }
    
     private void alteraRegistro() throws SQLException {
        if (jTablePesquisa.getSelectedRow() != -1) {
            int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente alterar este registro?",
                    "Confirmação!", JOptionPane.YES_NO_OPTION);

            // Se a confirmação for SIM
            if (resp == JOptionPane.YES_NO_OPTION) {                
                DAOCliente controle = new DAOCliente(); 
                BeansCliente cliente = new BeansCliente();
                
                cliente.setCodigo(Integer.parseInt(codigo.getText()));
                cliente.setNome(nomeCliente.getText());
                cliente.setCpf(Cpf.getText());
                cliente.setEmail(Email.getText());
                cliente.setFuncao((String) funcao.getSelectedItem());
                cliente.setTelefone(telefone.getText());
                cliente.setCelular(celular.getText());
                cliente.setData(nascimento.getText());
                cliente.setSexo((String) sexo.getSelectedItem());
                
                controle.altera(cliente);
                
                JOptionPane.showMessageDialog(rootPane, "Registro alterado com sucesso.");
                limpaCampos();
                desabilitaCampos();
                listaContatos();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro não selecionado.");
        }
    }
    
    private void limparTabela() {       
        while (tmCliente.getRowCount() > 0) {            
            tmCliente.removeRow(0);
        }
    } 
    
    private boolean verificaDados() {
        if ((!nomeCliente.getText().equals("")) && (!Cpf.getText().equals("")) 
                && (!Email.getText().equals("")) && (!nascimento.getText().equals(""))
                && (!celular.getText().equals(""))){            
            return true;
        }
        JOptionPane.showMessageDialog(rootPane, "Dados imcompletos.");
        return false;
    }
    
    private void limpaCampos() {
        nomeCliente.setText("");
        Cpf.setText("");
        Email.setText("");
        nascimento.setText("");
        telefone.setText("");
        celular.setText("");

    }
    private boolean verificaCPF(){
        ValidaCPF d = new ValidaCPF();
        boolean valida = ValidaCPF.isCPF(Cpf.getText());
        if (valida == true){
            return true;
        }else{
            JOptionPane.showMessageDialog(rootPane, "CPF Invalido.");
            return false;
        }
    }
    // Desabilita os campos do formulário
    private void desabilitaCampos() {
        nomeCliente.setEditable(false);
        Cpf.setEditable(false);
        Email.setEditable(false);
        nascimento.setEditable(false);
        telefone.setEditable(false);
        celular.setEditable(false);
        sexo.setEnabled(false);
        funcao.setEnabled(false);

    }
    
    // Habilita os campos do formulário
    private void habilitaCampos() {
        nomeCliente.setEditable(true);
        Cpf.setEditable(true);
        Email.setEditable(true);
        nascimento.setEditable(true);
        telefone.setEditable(true);
        celular.setEditable(true);
        sexo.setEnabled(true);
        funcao.setEnabled(true);
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CadastroCliente().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JFormattedTextField Cpf;
    private javax.swing.JButton Editar;
    private javax.swing.JTextField Email;
    private javax.swing.JButton Excluir;
    private javax.swing.JLabel Funcao;
    private javax.swing.JLabel Lcodigo;
    private javax.swing.JLabel Nomeusuario;
    private javax.swing.JButton Novo;
    private javax.swing.JTextField PesquisarCliente;
    private javax.swing.JButton Sair;
    private javax.swing.JButton Salvar;
    private javax.swing.JFormattedTextField celular;
    private javax.swing.JLabel celularusuario;
    private javax.swing.JTextField codigo;
    private javax.swing.JLabel cpfusuario;
    private javax.swing.JLabel emailusuario;
    private javax.swing.JComboBox<String> funcao;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTablePesquisa;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTree jTree1;
    private javax.swing.JFormattedTextField nascimento;
    private javax.swing.JLabel nascimentousuario;
    private javax.swing.JTextField nomeCliente;
    private javax.swing.JPanel painel;
    private javax.swing.JButton pesquisarCliente;
    private javax.swing.JComboBox<String> sexo;
    private javax.swing.JLabel sexousuario;
    private javax.swing.JFormattedTextField telefone;
    // End of variables declaration//GEN-END:variables
}
